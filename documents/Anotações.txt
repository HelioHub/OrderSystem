Hélio Marques 
16/09/2024

Data Model Creation (DER):
https://app.brmodeloweb.com/#!/logic/%7B%22modelid%22:%2266e8c8a549573442c5b92fbc%22,%22conversionId%22:%22%22%7D
pw: 1x9x7x3x8x2x


- CRIAR VIEWS VISANDO OS CLUSTERs.
- aplicação mult-tier

---------
- Revisar
---------------------------------------------------------------------------------------------------------------------------------------------------------
- CLEAR
- SOLID
- REST X SOAP
- CLUSTER INDICES
- POO - ABSTRACT 
- DESING PARTENS
- ESTUDAR: 

	/****** Object:  Table [dbo].[tab_item]    Script Date: 17/09/2024 13:00:50 ******/
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[tab_item]') AND type in (N'U'))
	DROP TABLE [dbo].[tab_item]
	GO

	/****** Object:  Table [dbo].[tab_item]    Script Date: 17/09/2024 13:00:50 ******/
	SET ANSI_NULLS ON
	GO

	SET QUOTED_IDENTIFIER ON
	GO

	CREATE TABLE [dbo].[tab_item](
		[code_item] [int] IDENTITY(1,1) NOT NULL,
		[name_item] [varchar](100) NOT NULL,
		[description_item] [varchar](250) NULL,
		[price_item] [decimal](20, 4) NULL,
	PRIMARY KEY CLUSTERED 
	(
		[code_item] ASC
	)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
	) ON [PRIMARY]
	GO


- DADOS:
PAULO PEDRO
RUA 10, 1, CENTRO, FORTALEZA, CEARA, BRASIL
558599991111
558599991111@WWW.COM


-- ELES PEDEM:

A Minerva Foods é líder na exportação de carne bovina na América do Sul e atua no segmento de carnes processadas, comercializando seus produtos em mais de 100 países. Além do Brasil, a Minerva Foods está presente na Argentina, Colômbia, Paraguai, Uruguai e Austrália.

A missão da área de Desenvolvimento de Sistemas é fornecer soluções sistêmicas para a organização, alinhadas aos processos e que possibilitem o alcance dos objetivos de negócio. Assegurar níveis adequados de custo, qualidade e prazo.

Principais Atividades

Desenvolver sistemas informatizados: estudar as regras de negócio inerentes aos objetivos e abrangência de sistema; dimensionar requisitos e funcionalidade de sistema; fazer levantamento de dados; modelar dados; especificar programas; codificar aplicativos; montar protótipo do sistema; testar sistema; implantar sistemas;
Prestar suporte técnico ao usuário: orientar áreas de apoio; consultar documentação técnica; consultar fontes alternativas de informações; simular problema em ambiente controlado; acionar suporte de terceiros, visando manter a operação sistêmica da Companhia;
Treinar usuário, abrangendo elaboração de material didático e instrumentos para avaliação de treinamento; configurar ambiente de treinamento; ministrar treinamento, visando a transferência de conhecimento para os usuários;
Elaborar documentação para ambiente informatizado: descrever processos; desenhar diagrama de fluxos de informações; elaborar dicionário de dados, manuais do sistema e relatórios técnicos; emitir pareceres técnicos; divulgar documentação, objetivando a manutenção da base de conhecimentos formal e acessível para as áreas envolvidas;
Oferecer soluções para ambientes informatizados: propor mudanças de processos e funções; prestar consultoria técnica; identificar necessidade do usuário; negociar alternativas de solução com usuário; adequar soluções a necessidade do usuário; demonstrar alternativas de solução; propor adoção de novos métodos e técnicas; organizar fóruns de discussão;
Pesquisar tecnologias em informática: pesquisar padrões, técnicas e ferramentas disponíveis no mercado; identificar fornecedores; solicitar demonstrações de produto; avaliar novas tecnologias por meio de visitas técnicas; construir plataforma de testes; analisar funcionalidade do produto; comparar alternativas tecnológicas; participar de eventos para qualificação profissional;
Replicar o conhecimento técnico, abrangendo o planejamento dos trabalhos técnicos, organização de agendas, avaliação dos trabalhos executados pela equipe, definição de boas práticas de desenvolvimento (metodologias a serem utilizadas), inspeção da utilização dos padrões, visando disseminação de conhecimento e melhoria na qualidade das entregas junto aos clientes internos.
Pré-requisitos

Superior completo ou cursando em Ciência da Computação, Sistemas da Informação, Engenharia da Computação e/ou áreas afins;
Desejável: especialização ou pós-graduação na área;
Lógica de programação, Delphi, SQL Server (TSQL), programação orientada a objeto (OOP), conhecimento em desenvolvimento para serviços, desenvolvimento de APIs e desenvolvimento Delph para mobile;
Controles de versão (GIT, SVN, Bitbucket), Modelagem de dados, Diagramas de Caso de Uso (UML) e Diagrama de atividades (UML), conhecimento em gestão projetos de software;
Inglês - Nível Básico;
Espanhol - Nível Intermediário.
Esta vaga se estende para pessoas PCD

#LI-VC1

Departamento
TECH
Função
Analista Sistema Sênior
Localizações
Barretos
Tipo de contratação
Tempo integral
Tipo de posição
Efectiva


POO
-ENCAPSULAMENTO
-ABSTRAÇÃO CLASSE -OBJETO
-HERANÇA
-POLIMORFISMO 

Cadastro Delphi POO + MVC + DAO - DAO Pattern

clipatecinformatica.com.br
https://www.clipatecinformatica.com.br › 2018/01 › cada...
23 de jan. de 2018 — O padrão DAO (Data Access Object), surgiu com a necessidade de separar a regra de negócio da persistência dos dados, que até então, era ...



FIREDAC ESTUDAR OS COMPONENTES

UNITEST - TESTE UNITÁRIO

PROCURA POR CODE_ORDER E EVITAR O NUMBER RECORDS


MemTableItems



“Os padrões de projeto são muito complexos para iniciantes.”

Essa é uma mensagem que recebi de alguém que está tendo dificuldades com o design de software.

Então, caro iniciante, aqui está o que você não entende.

Os padrões de design são, na verdade, simples se explicados corretamente.

Vamos detalhar 12 padrões-chave em termos simples.

1. Factory
↳ Pense nisso como uma pizzaria.
↳ Você diz à loja o tipo de pizza que deseja e eles a fazem para você.

2. Observer
↳ Imagine se inscrever em um canal do YouTube.
↳ Você é notificado sempre que o canal publica um novo vídeo.

3. Singleton
↳ Isso é como ter apenas um diretor em uma escola.
↳ Não importa quantas vezes você pergunte, sempre terá a mesma pessoa.

4. Builder
↳ Pense nisso como a montagem de um computador personalizado.
↳ Você escolhe cada peça passo a passo em vez de obter um sistema pré-montado.

5. Adapter
↳ É como um adaptador de energia para viagens internacionais.
↳ Permite que interfaces incompatíveis funcionem juntas.

6. Decorator
↳ Imagine personalizar seu café.
↳ Cada adição, como leite ou açúcar, “decora” o café sem alterar sua natureza básica.

7. Proxy
↳ Pense nisso como um segurança em uma boate.
↳ O segurança (proxy) controla o acesso à boate (objeto real).

8. Strategy
↳ Imagine diferentes rotas para chegar a um destino.
↳ Você pode escolher a rota mais rápida, a mais panorâmica ou a mais barata.

9. Command
↳ É como um pedido de restaurante.
↳ O garçom leva seu pedido (comando) para a cozinha sem saber cozinhar.

10. Template
↳ Pense nele como um cortador de biscoitos.
↳ A forma básica é definida, mas você pode personalizar as decorações.

11. Iterator
↳ Imagine folhear um álbum de fotos.
↳ Você pode percorrer as fotos uma a uma sem precisar saber como elas estão armazenadas.

12. State
↳ Pense em uma máquina de venda automática.
↳ Seu comportamento muda com base em seu estado (tem moedas, está fora de estoque etc.).

Esses padrões ajudam a resolver problemas comuns de design de software e tornam o código mais flexível, reutilizável e passível de manutenção.

♻️ Reposte este post para compartilhar conhecimento.

Siga-me, Lucas Gertel, para nunca perder uma postagem.

PS: Qual assunto vocês gostariam de ver por aqui?

Créditos GIF: Nelson Djalo





A qualidade do código e a velocidade de entrega são vitais.

E muitas vezes entram em conflito.

Muitos acham que não é possível ter os dois:
→ O código de alta qualidade deixa você mais lento
→ Entrega rápida significa código ruim
→ É uma troca que você precisa fazer

Mas isso não é verdade:
- O código de qualidade tem menos bugs
- É mais fácil de manter
- Melhora a colaboração da equipe

A entrega rápida também é importante:
- Tempo mais rápido para o mercado
- Resposta rápida ao feedback
- Ficar à frente dos concorrentes

A verdade é que qualidade e velocidade podem coexistir:
- O código de alta qualidade acelera o desenvolvimento futuro
- Os testes automatizados detectam os problemas com antecedência
- O código claro aumenta a eficiência da equipe

Veja a seguir como equilibrar ambos:

1. Adotar metodologias ágeis:
 - Entregar software funcional rapidamente
 - Melhorar continuamente a qualidade

2. Implementar CI/CD:
 - Automatize os testes e a implementação
 - Detectar problemas antecipadamente

3. Use revisões de código:
 - As revisões regulares por pares mantêm a qualidade
 - Elas não atrasam significativamente o desenvolvimento

4. Investir nas habilidades do desenvolvedor:
 - Os desenvolvedores bem treinados escrevem códigos melhores
 - Eles o fazem mais rapidamente

5. Priorize com sabedoria:
 - Concentre-se nos recursos essenciais
 - Níveis de qualidade aceitáveis para cada versão

6. Refatorar regularmente:
 - Melhorar continuamente o código existente
 - Evitar que a dívida técnica o atrase

7. Utilize ferramentas:
 - Use ferramentas de análise de código estático
 - Os testes automatizados detectam os problemas com antecedência

É essencial equilibrar a qualidade e a velocidade do código.

Não se trata de perfeição.

Trata-se de fornecer software valioso e confiável com eficiência.


INDICE CLUSTERED E NONCLUSTERED

SEEK   > PROCURAR
LOOKUP > PESQUISA
SCAN   > VERIFICAR


TOP
....
FOLHA 8KB BLOCOS


 enviar um e-mail com o código fonte
criado e os prints de telas do que foi desenvolvido para 

arnaldo.marques@minervafoods.com
vanessa.castro@minervafoods.com 

O horário da entrega do e-mail será a formalização da


