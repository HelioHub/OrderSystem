unit UDataOrder;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, cxGraphics, cxLookAndFeels,
  cxLookAndFeelPainters, Vcl.Menus, Vcl.StdCtrls, cxButtons, Vcl.ExtCtrls,
  cxControls, cxPCdxBarPopupMenu, cxContainer, cxEdit, cxTextEdit, cxGroupBox,
  cxRadioGroup, cxLabel, cxPC, dxSkinsCore, dxSkinDevExpressStyle,
  dxSkinscxPCPainter, dxSkinBlue, dxBarBuiltInMenu;

type
  TFDadosOrder = class(TForm)
    cxPageControl1: TcxPageControl;
    cxTabSheet1: TcxTabSheet;
    cxTCrodape: TcxTabControl;
    cxBok: TcxButton;
    cxBcancel: TcxButton;
    cxLsala: TcxLabel;
    cxLdescricao: TcxLabel;
    cxRGsituacao: TcxRadioGroup;
    cxTEsala: TcxTextEdit;
    cxTEdescricao: TcxTextEdit;
    procedure cxBcancelClick(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormShow(Sender: TObject);
    procedure cxBokClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    GOpcao : String[1];
    iID : Integer;
  end;

var
  FDadosOrder: TFDadosOrder;

implementation

{$R *.dfm}

uses UDM1, UDM2, ULibSCR, Db;

procedure TFDadosOrder.cxBcancelClick(Sender: TObject);
begin
  Close;
end;

procedure TFDadosOrder.cxBokClick(Sender: TObject);
var Recn : TBookmark;
begin
  Recn := DM1.CDSSala.GetBookmark;

  If Trim(cxTEsala.Text) = '' Then
  Begin
    Beep;
    ShowMessage('Código da Sala Inválido!');
    cxTEsala.SetFocus;
    Exit;
  End;
  {
  If Trim(cxTEdescricao.Text) = '' Then
  Begin
    Beep;
    ShowMessage('Informe a Descrição da Sala!');
    cxTEdescricao.SetFocus;
    Exit;
  End;
  }

  Try
    DM2.QManutencao.ParamByName('P01').AsString := cxTEsala.Text;
    DM2.QManutencao.ParamByName('P02').AsString := Trim(cxTEdescricao.Text);
    DM2.QManutencao.ParamByName('P03').AsString := IntToStr(cxRGsituacao.ItemIndex);
    if GOpcao = 'A' then
       DM2.QManutencao.ParamByName('P00').AsInteger := iID;

    DM2.QManutencao.ExecSQL;
  Except On E: Exception Do
    Begin
      PMensagemErrosBDE(E.Message);
    End;
  End;

  DM1.CDSSala.Close;
  DM1.CDSSala.Open;
  DM1.CDSSala.GotoBookmark(Recn);
  DM1.CDSSala.FreeBookmark(Recn);
  DM1.CDSSala.Locate('NUMEROSALA',cxTEsala.Text,[]);

  Close;
end;

procedure TFDadosOrder.FormClose(Sender: TObject; var Action: TCloseAction);
begin
   //CDS.close;
   Action := CaFree;
end;

procedure TFDadosOrder.FormShow(Sender: TObject);
begin
  //CDS.Open;
  DM2.QManutencao.Close;
  DM2.QManutencao.SQL.Clear;
  If GOpcao = 'I' Then
  Begin
   DM2.QManutencao.SQL.Add( 'INSERT INTO SALA ' +
                            '(NUMEROSALA, '     +
                            ' NOMESALA, '       +
                            ' SITUACAOSALA) '   +
                            'VALUES(:P01, :P02, :P03)' );

    cxTEsala.Text           := '';
    cxTEdescricao.Text      := '';
    cxRGsituacao.ItemIndex  := 0;
    cxTEsala.SetFocus;
    //DBLCB.KeyValue  := 0;
  End
  Else
  Begin
    DM2.QManutencao.SQL.Add('UPDATE SALA SET ' +
                            'NUMEROSALA        =:P01, '+
                            'NOMESALA          =:P02, '+
                            'SITUACAOSALA      =:P03  '+
                            'WHERE CODIGOSALA =:P00 ');

    cxTEsala.Text           := DM1.CDSSalaNUMEROSALA.AsString;
    cxTEdescricao.Text      := DM1.CDSSalaNOMESALA.AsString;
    Try    cxRGsituacao.ItemIndex  := DM1.CDSSalaSITUACAOSALA.AsInteger
    Except cxRGsituacao.ItemIndex  := 0
    End;
    cxTEsala.SetFocus;
  End;

  If GOpcao = 'A' Then
     cxTabSheet1.Caption := 'Alterar Sala'
  Else
     cxTabSheet1.Caption := 'Incluir Sala';
end;

end.
